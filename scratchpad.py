from pykml import parser
import json
import os
import math
import threading
import time
def CoordinateMath(arrayOne, arrayTwo):
    """
    outarray = []
    for num in arrayOne:
        for num2 in arrayTwo:
            if num == num2:
                outarray.append(0)
    count = 0
    for num in outarray:
        if num == 0:
            count = count +1
    return count > 0
    """
    outarray = []
    xarr = []
    yarr = []
    for num in arrayOne:
        xarr.append(float(num[0]))
        yarr.append(float(num[1]))
    x1count = 0;
    for num in xarr:
        x1count = x1count + num
    x1count = x1count / len(xarr)
    y1count = 0;
    for num in yarr:
        y1count = y1count + num
    y1count = y1count / len(yarr)
    xarr.clear()
    yarr.clear()
    for num in arrayTwo:
        xarr.append(float(num[0]))
        yarr.append(float(num[1]))
    x2count = 0;
    for num in xarr:
        x2count = x2count + num
    x2count = x2count / len(xarr)
    y2count = 0;
    for num in yarr:
        y2count = y2count + num
    y2count = y2count / len(yarr)
    centerOne = [x1count,y1count]
    centerTwo = [x2count,y2count]
    x = 69.1 * (y2count - y1count)
    y = y = 53 * (x2count - x1count) * math.cos(y1count/57.3)
    return math.sqrt(x * x + y * y)
    #print(math.sqrt(x * x + y * y))
    #meanDiff = [abs(x1count-x2count), abs(y1count-y2count)]
    #print(meanDiff)
    #return meanDiff[0] < 0.1 and meanDiff[1]< 0.1

def longitudeCalc(coordArray):
    yarr = []
    for num in coordArray:
        yarr.append(float(num[0]))
    y1count = 0;
    for num in yarr:
        y1count = y1count + num
    y1count = y1count / len(yarr)
    return y1count




def GrabCoordinates(filename):
    with open(filename) as f:
        root = parser.parse(f).getroot()
    try:
        coordinateArray = root.Document.Placemark.Polygon.outerBoundaryIs.LinearRing.coordinates
    except:
        coordinateArray = root.Document.Placemark.MultiGeometry.Polygon.outerBoundaryIs.LinearRing.coordinates
    return coordinateArray
#GrabCoordinates(r'C:\Users\14172\Downloads\all-zips\zip84101.kml')
def StringToNumArray(string):
    #strNew = string.replace('-', '')
    strArr = string.split(",0.0 ")

    """
    numArr = []
    for num in strArr:
        numArr.append(num)
    """
    numArr = []
    for point in strArr:
        pointSplit = point.split(',')
        numPointX = float(pointSplit[0])
        numPointY = float(pointSplit[1])
        numPointBoth = [numPointX,numPointY]
        numArr.append(numPointBoth)

    return numArr

arr1 = [-83.4829517221393,34.9934833986299,0.0 -83.481475,34.989927,0.0 -83.482388,34.985185,0.0 -83.482158,34.98341,0.0 -83.480592,34.981475,0.0 -83.480922,34.977773,0.0 -83.480206,34.974239,0.0 -83.478618,34.9731,0.0 -83.47774,34.970281,0.0 -83.476853,34.969732,0.0 -83.474329,34.964505,0.0 -83.472212,34.962495,0.0 -83.469514,34.962232,0.0 -83.469671,34.960873,0.0 -83.468858,34.959951,0.0 -83.467653,34.95522,0.0 -83.465406,34.952297,0.0 -83.466619,34.950156,0.0 -83.466541,34.948966,0.0 -83.465345,34.946809,0.0 -83.465341,34.944477,0.0 -83.462546,34.944127,0.0 -83.461474,34.944697,0.0 -83.459385,34.944696,0.0 -83.458323,34.941075,0.0 -83.456054,34.939457,0.0 -83.454335,34.939107,0.0 -83.452174,34.936327,0.0 -83.453706,34.933083,0.0 -83.453328,34.928178,0.0 -83.454956,34.92631,0.0 -83.455069,34.924553,0.0 -83.457885,34.923253,0.0 -83.459276,34.922,0.0 -83.45821,34.920655,0.0 -83.456428,34.920169,0.0 -83.45531,34.919113,0.0 -83.452862,34.918848,0.0 -83.45006,34.919851,0.0 -83.44565,34.916733,0.0 -83.44428,34.916501,0.0 -83.440997,34.917455,0.0 -83.440212,34.917241,0.0 -83.439129,34.915979,0.0 -83.439201,34.914413,0.0 -83.438309,34.912663,0.0 -83.435251,34.910938,0.0 -83.433198,34.911339,0.0 -83.431759,34.910632,0.0 -83.429919,34.910818,0.0 -83.426398,34.913109,0.0 -83.424456,34.911864,0.0 -83.423367,34.912827,0.0 -83.421839,34.91281,0.0 -83.42101,34.914103,0.0 -83.418237,34.914997,0.0 -83.415274,34.915524,0.0 -83.410206,34.917605,0.0 -83.407532,34.917339,0.0 -83.406036,34.918964,0.0 -83.402653,34.917973,0.0 -83.398872,34.918507,0.0 -83.398666,34.921948,0.0 -83.397515,34.924542,0.0 -83.394453,34.927884,0.0 -83.394582,34.930264,0.0 -83.392169,34.935161,0.0 -83.390258,34.933914,0.0 -83.38909,34.934951,0.0 -83.388945,34.930671,0.0 -83.388814,34.930124,0.0 -83.387465,34.930404,0.0 -83.38533,34.930568,0.0 -83.382045,34.930255,0.0 -83.379522,34.929579,0.0 -83.376784,34.928241,0.0 -83.374798,34.92675,0.0 -83.374494,34.92832,0.0 -83.35897,34.929457,0.0 -83.358707,34.928432,0.0 -83.360033,34.925614,0.0 -83.359898,34.923428,0.0 -83.35737,34.924038,0.0 -83.355877,34.92526,0.0 -83.353037,34.929874,0.0 -83.342956,34.930632,0.0 -83.34292,34.931572,0.0 -83.344915,34.93468,0.0 -83.342376,34.935026,0.0 -83.338733,34.937218,0.0 -83.338454,34.939245,0.0 -83.335376,34.942499,0.0 -83.330539,34.942572,0.0 -83.326234,34.940783,0.0 -83.324401,34.941532,0.0 -83.335524,34.946784,0.0 -83.337473,34.947197,0.0 -83.338994,34.946697,0.0 -83.34235,34.946821,0.0 -83.343819,34.949842,0.0 -83.346002,34.950968,0.0 -83.34787,34.951177,0.0 -83.348664,34.950414,0.0 -83.352561,34.950983,0.0 -83.351969,34.954851,0.0 -83.35424,34.959086,0.0 -83.355241,34.958878,0.0 -83.358832,34.959969,0.0 -83.362667,34.959235,0.0 -83.363957,34.960311,0.0 -83.366656,34.961357,0.0 -83.369343,34.960784,0.0 -83.368459,34.962568,0.0 -83.366462,34.964411,0.0 -83.365354,34.964017,0.0 -83.363355,34.965938,0.0 -83.359037,34.966502,0.0 -83.355188,34.965933,0.0 -83.355414,34.966943,0.0 -83.357056,34.967151,0.0 -83.355583,34.970056,0.0 -83.353046,34.971115,0.0 -83.35076,34.974016,0.0 -83.350707,34.977177,0.0 -83.352773,34.976288,0.0 -83.351286,34.978453,0.0 -83.351237,34.981314,0.0 -83.352777,34.981629,0.0 -83.353066,34.983369,0.0 -83.35128,34.983842,0.0 -83.351368,34.990925,0.0 -83.354879,34.991397,0.0 -83.366415,34.983038,0.0 -83.366212,34.981375,0.0 -83.367228,34.981012,0.0 -83.368203,34.978798,0.0 -83.372927,34.97747,0.0 -83.371738,34.974619,0.0 -83.371482,34.972068,0.0 -83.37196,34.968371,0.0 -83.37402,34.9655,0.0 -83.378237,34.962763,0.0 -83.376256,34.960702,0.0 -83.376424,34.957561,0.0 -83.377484,34.960739,0.0 -83.38047,34.959518,0.0 -83.381834,34.957592,0.0 -83.385028,34.957438,0.0 -83.386518,34.957813,0.0 -83.388239,34.962787,0.0 -83.388692,34.964177,0.0 -83.388388,34.967553,0.0 -83.394233,34.969868,0.0 -83.396936,34.971638,0.0 -83.398004,34.9715,0.0 -83.397478,34.973661,0.0 -83.399239,34.974034,0.0 -83.404917,34.974343,0.0 -83.403481,34.976462,0.0 -83.403403,34.980833,0.0 -83.410628,34.986038,0.0 -83.410913,34.985247,0.0 -83.413052,34.986961,0.0 -83.412386,34.987353,0.0 -83.4219941809574,34.9943931363955,0.0 -83.4829517221393,34.9934833986299]
arr2 =[-82.213418,32.230748,0.0 -82.213683,32.229224,0.0 -82.210902,32.226812,0.0 -82.210985,32.224525,0.0 -82.208562,32.221314,0.0 -82.207199,32.22081,0.0 -82.206277,32.217971,0.0 -82.207918,32.215911,0.0 -82.207607,32.213955,0.0 -82.205816,32.211097,0.0 -82.204557,32.211278,0.0 -82.204984,32.209772,0.0 -82.201499,32.207844,0.0 -82.200816,32.207062,0.0 -82.201377,32.20597,0.0 -82.199539,32.205174,0.0 -82.199127,32.204264,0.0 -82.19625,32.205097,0.0 -82.196747,32.20371,0.0 -82.194759,32.201469,0.0 -82.194446,32.199452,0.0 -82.19526,32.197733,0.0 -82.194603,32.195805,0.0 -82.192409,32.194938,0.0 -82.191333,32.192189,0.0 -82.190106,32.19057,0.0 -82.190441,32.18987,0.0 -82.188454,32.189315,0.0 -82.187482,32.187567,0.0 -82.187998,32.185426,0.0 -82.187314,32.183152,0.0 -82.185112,32.181584,0.0 -82.184187,32.180002,0.0 -82.186362,32.177013,0.0 -82.185357,32.175862,0.0 -82.184615,32.173318,0.0 -82.185676,32.171002,0.0 -82.183938,32.170493,0.0 -82.183808,32.169604,0.0 -82.186009,32.168154,0.0 -82.185745,32.166871,0.0 -82.184656,32.167302,0.0 -82.182473,32.166658,0.0 -82.181926,32.165945,0.0 -82.184268,32.163798,0.0 -82.183842,32.161928,0.0 -82.182727,32.160442,0.0 -82.18363,32.158766,0.0 -82.186299,32.157071,0.0 -82.186592,32.155155,0.0 -82.185271,32.155392,0.0 -82.184902,32.154548,0.0 -82.187306,32.151435,0.0 -82.187423,32.149939,0.0 -82.188973,32.150792,0.0 -82.188712,32.147649,0.0 -82.189107,32.146167,0.0 -82.192261,32.143461,0.0 -82.193937,32.14248,0.0 -82.195317,32.140929,0.0 -82.19337,32.138405,0.0 -82.193009,32.136426,0.0 -82.194821,32.1342,0.0 -82.191758,32.133675,0.0 -82.193266,32.132051,0.0 -82.191258,32.131806,0.0 -82.190667,32.131013,0.0 -82.192912,32.13008,0.0 -82.189238,32.129593,0.0 -82.185394,32.129918,0.0 -82.182701,32.130845,0.0 -82.182033,32.127868,0.0 -82.182456,32.125034,0.0 -82.179268,32.124552,0.0 -82.161707,32.11162,0.0 -82.163782,32.109188,0.0 -82.161697,32.109641,0.0 -82.155269,32.113078,0.0 -82.152204,32.115575,0.0 -82.149143,32.116225,0.0 -82.147163,32.112341,0.0 -82.152218,32.110906,0.0 -82.152473,32.111651,0.0 -82.154814,32.110589,0.0 -82.153951,32.106172,0.0 -82.145514,32.107503,0.0 -82.141613,32.108389,0.0 -82.13592,32.097782,0.0 -82.135041,32.096764,0.0 -82.126177,32.104609,0.0 -82.124835,32.106935,0.0 -82.123854,32.106609,0.0 -82.118546,32.111628,0.0 -82.110813,32.10521,0.0 -82.109049,32.104886,0.0 -82.10875,32.105469,0.0 -82.108998,32.105691,0.0 -82.109371,32.105699,0.0 -82.109578,32.105974,0.0 -82.109731,32.106617,0.0 -82.109664,32.10712,0.0 -82.109853,32.107774,0.0 -82.109662,32.107948,0.0 -82.109158,32.108024,0.0 -82.108374,32.107858,0.0 -82.107721,32.107568,0.0 -82.106712,32.109684,0.0 -82.106231,32.110685,0.0 -82.103276,32.108754,0.0 -82.101053,32.108149,0.0 -82.099839,32.108731,0.0 -82.09653,32.107125,0.0 -82.094457,32.104902,0.0 -82.091279,32.106735,0.0 -82.089065,32.10606,0.0 -82.093321,32.104111,0.0 -82.090807,32.100468,0.0 -82.089604,32.097028,0.0 -82.092326,32.096686,0.0 -82.097694,32.094341,0.0 -82.088129,32.086393,0.0 -82.093338,32.081904,0.0 -82.092045,32.082256,0.0 -82.089313,32.080695,0.0 -82.087699,32.078657,0.0 -82.09265,32.077041,0.0 -82.08989,32.070554,0.0 -82.08778,32.067276,0.0 -82.086468,32.067521,0.0 -82.087681,32.068561,0.0 -82.087815,32.070072,0.0 -82.085839,32.072535,0.0 -82.080369,32.076448,0.0 -82.077808,32.077416,0.0 -82.07447,32.077174,0.0 -82.071363,32.078843,0.0 -82.069459,32.078381,0.0 -82.067682,32.079217,0.0 -82.065234,32.074012,0.0 -82.063847,32.073448,0.0 -82.062755,32.07009,0.0 -82.055011,32.0702,0.0 -82.047714,32.07161,0.0 -82.045615,32.071512,0.0 -82.042573,32.077798,0.0 -82.042566,32.079518,0.0 -82.043635,32.081806,0.0 -82.043834,32.084963,0.0 -82.043336,32.086433,0.0 -82.04689,32.086306,0.0 -82.047766,32.091178,0.0 -82.041396,32.090742,0.0 -82.040704,32.093598,0.0 -82.035465,32.110107,0.0 -82.027813,32.111835,0.0 -82.024324,32.115715,0.0 -82.020693,32.119157,0.0 -82.018367,32.120223,0.0 -82.016839,32.122131,0.0 -82.01946,32.123327,0.0 -82.02719,32.124499,0.0 -82.028262,32.122287,0.0 -82.031057,32.122515,0.0 -82.028742,32.134093,0.0 -82.027689,32.136107,0.0 -82.027118,32.141046,0.0 -82.025484,32.143379,0.0 -82.02302,32.145609,0.0 -82.021742,32.147481,0.0 -82.02225,32.150157,0.0 -82.022032,32.152893,0.0 -82.019977,32.160247,0.0 -82.028262,32.161751,0.0 -82.024923,32.161422,0.0 -82.024107,32.164948,0.0 -82.025284,32.168901,0.0 -82.026347,32.17116,0.0 -82.029299,32.174321,0.0 -82.031045,32.177746,0.0 -82.042262,32.1775,0.0 -82.044921,32.181002,0.0 -82.047081,32.182985,0.0 -82.046281,32.18596,0.0 -82.046916,32.187411,0.0 -82.044828,32.187502,0.0 -82.047954,32.190885,0.0 -82.043896,32.193458,0.0 -82.040665,32.196486,0.0 -82.033331,32.194376,0.0 -82.033545,32.195714,0.0 -82.029654,32.199603,0.0 -82.033287,32.202256,0.0 -82.035015,32.201099,0.0 -82.045446,32.198548,0.0 -82.046516,32.197933,0.0 -82.056119,32.199368,0.0 -82.059114,32.204808,0.0 -82.055248,32.207883,0.0 -82.050354,32.210952,0.0 -82.053261,32.213834,0.0 -82.055797,32.214092,0.0 -82.057188,32.215083,0.0 -82.053085,32.218564,0.0 -82.056502,32.218201,0.0 -82.058182,32.216433,0.0 -82.063754,32.220782,0.0 -82.069329,32.221398,0.0 -82.070764,32.220779,0.0 -82.074467,32.221179,0.0 -82.075645,32.221684,0.0 -82.074125,32.223132,0.0 -82.073211,32.225389,0.0 -82.063308,32.227913,0.0 -82.062699,32.23113,0.0 -82.063639,32.233562,0.0 -82.061579,32.237554,0.0 -82.060072,32.237721,0.0 -82.057122,32.239311,0.0 -82.053966,32.234558,0.0 -82.049028,32.235735,0.0 -82.046059,32.236897,0.0 -82.048135,32.240963,0.0 -82.052092,32.241763,0.0 -82.055322,32.242835,0.0 -82.058646,32.244908,0.0 -82.061564,32.246208,0.0 -82.063443,32.246322,0.0 -82.064087,32.254134,0.0 -82.064523,32.256422,0.0 -82.060942,32.256703,0.0 -82.050919,32.253836,0.0 -82.046982,32.253332,0.0 -82.044648,32.252281,0.0 -82.036123,32.250479,0.0 -82.035474,32.247701,0.0 -82.033402,32.246586,0.0 -82.031748,32.246395,0.0 -82.027949,32.250127,0.0 -82.027484,32.251289,0.0 -82.027828,32.25445,0.0 -82.026965,32.256478,0.0 -82.025538,32.257621,0.0 -82.027641,32.265192,0.0 -82.026307,32.268313,0.0 -82.02658,32.26914,0.0 -82.025595,32.268152,0.0 -82.023219,32.267546,0.0 -82.025339,32.278883,0.0 -82.068573,32.287222,0.0 -82.068511,32.285302,0.0 -82.081259,32.28416,0.0 -82.083996,32.283403,0.0 -82.091226,32.278058,0.0 -82.095972,32.276103,0.0 -82.092628,32.272579,0.0 -82.093034,32.269122,0.0 -82.091743,32.265107,0.0 -82.091765,32.263441,0.0 -82.090845,32.260784,0.0 -82.087216,32.25965,0.0 -82.083842,32.257814,0.0 -82.082281,32.257658,0.0 -82.08312,32.251463,0.0 -82.084519,32.247729,0.0 -82.090476,32.249412,0.0 -82.093644,32.253501,0.0 -82.101887,32.257171,0.0 -82.103313,32.255284,0.0 -82.102346,32.252243,0.0 -82.102859,32.24765,0.0 -82.10757,32.250715,0.0 -82.109439,32.250929,0.0 -82.111383,32.249094,0.0 -82.112424,32.24678,0.0 -82.118599,32.248806,0.0 -82.122774,32.249812,0.0 -82.12538,32.249986,0.0 -82.128602,32.251677,0.0 -82.132254,32.252484,0.0 -82.138025,32.254654,0.0 -82.13759,32.25741,0.0 -82.141755,32.254921,0.0 -82.145653,32.253617,0.0 -82.154137,32.253864,0.0 -82.158709,32.253436,0.0 -82.162314,32.254083,0.0 -82.163345,32.253034,0.0 -82.165505,32.253659,0.0 -82.167378,32.255224,0.0 -82.16805,32.253385,0.0 -82.169972,32.250898,0.0 -82.172775,32.248942,0.0 -82.178347,32.246361,0.0 -82.179422,32.244455,0.0 -82.179878,32.239761,0.0 -82.181241,32.241442,0.0 -82.183655,32.241014,0.0 -82.195849,32.239576,0.0 -82.205151,32.243406,0.0 -82.206492,32.245897,0.0 -82.208366,32.246394,0.0 -82.211172,32.245952,0.0 -82.211921,32.246915,0.0 -82.212324,32.245731,0.0 -82.211184,32.244484,0.0 -82.212605,32.241196,0.0 -82.211443,32.238722,0.0 -82.210591,32.239877,0.0 -82.209794,32.238822,0.0 -82.21112,32.237647,0.0 -82.210383,32.236592,0.0 -82.210451,32.234893,0.0 -82.213018,32.234609,0.0 -82.211977,32.233399,0.0 -82.213418,32.230748]
#print(CoordinateMath(arr1,arr2))

#print(CoordinateMath(StringToNumArray(GrabCoordinates(r'C:\Users\14172\Downloads\all-zips\zip30912.kml').text),StringToNumArray(GrabCoordinates(r'C:\Users\14172\Downloads\all-zips\zip84101.kml').text)))

print(time.time_ns())
r'''
fileArr = []
directory = r'C:\Users\14172\Downloads\all-zips'
#put files in array
for filename in os.listdir(directory):
    f = os.path.join(directory, filename)
    #string = f[-9:]
    fileArr.append(f)
'''
'''
def driver(num1, num2):
    #coord checking
    fileDic = dict()
    for i in range(num1, num2,1):
        arr = []
        for j in range(0,len(fileArr),1):
            if 20 > CoordinateMath(StringToNumArray(GrabCoordinates(fileArr[i]).text),StringToNumArray(GrabCoordinates(fileArr[j]).text)):
                arr.append(fileArr[j][-9:])

        zipcode = fileArr[i][-9:]
        fileDic.update({zipcode: arr})
        print(i)
        #print(threading.Thread.name)
        #print(time.time_ns())
        '''
'''
t1 = threading.Thread(target=driver, args=(0, 1))
t2 = threading.Thread(target=driver, args=(1, 2))
t3 = threading.Thread(target=driver, args=(2, 3))
t4 = threading.Thread(target=driver, args=(3, 4))
t5 = threading.Thread(target=driver, args=(4, 5))
t6 = threading.Thread(target=driver, args=(5, 6))
t7 = threading.Thread(target=driver, args=(6, 7))
t8 = threading.Thread(target=driver, args=(7, 8))
t1.start()
t2.start()
t3.start()
t4.start()
t5.start()
t6.start()
t7.start()
t8.start()
t1.join()
t2.join()
t3.join()
t4.join()
t5.join()
t6.join()
t7.join()
t8.join()
totalFileDic = dict()
with open("zipmap.json", "w") as write_file:
    json.dump(totalFileDic, write_file)
print(time.time_ns())
#outString = json.dumps(fileDic)
#print(outString)
    #print(fileDic.get(zipcode))
#len(fileArr) -1

fileLongArr = []
count = len(fileArr)
for file in fileArr:
    longitude = longitudeCalc(StringToNumArray(GrabCoordinates(file).text))
    fileset = [file, longitude]
    fileLongArr.append(fileset)
    #print(count)
    count = count -1
fileLongArr.sort(key=lambda setL: setL[1])

filesToLookAtDic = dict()
count = 0
for thing in fileLongArr:
    arr = []
    for i in range(len(fileLongArr)):
        if abs(abs(thing[1]) - abs(fileLongArr[i][1])) <= 1:
            arr.append(fileLongArr[i][0])
    filesToLookAtDic.update({thing[0]: arr})
    print(count)
    count = count +1
with open("zipmap.json", "w") as write_file:
    json.dump(filesToLookAtDic, write_file)
    '''
r'''
print(fileLongArr[0][1])
print(fileLongArr[0][0])
print(fileLongArr[1][1])
print(fileLongArr[1][0])
print(fileLongArr[2][1])
print(fileLongArr[2][0])
print(fileLongArr[10000][1])
for thing in fileLongArr:
    print(thing[0] + ' '+ str(thing[1]))

print(StringToNumArray(GrabCoordinates(r'C:\Users\14172\Downloads\all-zips\zip99929.kml').text))
print(longitudeCalc(StringToNumArray(GrabCoordinates(r'C:\Users\14172\Downloads\all-zips\zip99929.kml').text)))
'''
fileDic = dict()
def driver2():
    #coord checking
    with open("zipmap.json") as read_file:
        temp = json.load(read_file)
    count = 1
    for x in temp:
        temparr = []
        percentageDone = count/331
        print(percentageDone)
        count = count + 1
        for item in temp[x]:
            distance = CoordinateMath(StringToNumArray(GrabCoordinates(x).text),StringToNumArray(GrabCoordinates(item).text))
            if distance < 20:
                temparr.append(item[-9:])
        zipcode = x[-9:]
        fileDic.update({zipcode: temparr})
        print(x)
    with open("zipmap2.json", "w") as write_file:
            json.dump(fileDic, write_file)
driver2()
json.loads("zipmaps2.json")